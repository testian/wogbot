package modules;

import org.schwering.irc.lib.IRCUser;

import java.util.*;
import core.*;
import logging.*;
import utils.*;

public class SearchCommand implements BotCommand {

	public void execute(Bot bot, String channel, IRCUser user, String message)
			throws BotException {
		SimpleStringTokenizer tokens = new SimpleStringTokenizer(message);
		List<String> searchTokens = new LinkedList<String>();
		while (tokens.hasMoreTokens())
		{
			searchTokens.add(tokens.nextToken());
		}
		List<AbstractMessageEvent> matches =  getMatching(searchTokens, bot.getLog().iterable(channel));
		int i = 0;
		int size = matches.size();
		if (size < 1){
			bot.msg(channel, "Keine Übereinstimmungen gefunden");
		} else {
			bot.msg(channel, size + " Übereinstimmungen gefunden:");
		}
		for (AbstractMessageEvent t : matches)
		{
			if (i>=5){break;}
			bot.msg(channel, t.logString());
			i++;
		}
		
	}
	
	private List<AbstractMessageEvent> getMatching(List<String> searchTokens, Iterable<LogEvent> iterable)
	{
		List<AbstractMessageEvent> matching = new LinkedList<AbstractMessageEvent>();
		for (LogEvent t : iterable)
		{
			if (t instanceof AbstractMessageEvent)
			{
				AbstractMessageEvent messageEvent = (AbstractMessageEvent)t;
				boolean containsAll=true;
				for (String token : searchTokens)
				{
					if (!messageEvent.getMessage().toLowerCase().contains(token.toLowerCase()))
					{
						containsAll = false; break;
					}
				}
				if (containsAll)
				{
					matching.add(messageEvent);
				}
				/*if (matching.size()>=maxSize)
				{
					return matching;
				}*/
			}
		}
	return matching;
	}

	public String getName() {
		// TODO Auto-generated method stub
		return "search";
	}

	public String getUsage() {
		// TODO Auto-generated method stub
		return "<Suchbegriffe>";
	}

}
